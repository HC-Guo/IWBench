# ----------------------------------------------------------------------------------
# - Author Contact: wei.zhang, knediny@gmail.com (Original code)
# ----------------------------------------------------------------------------------
from utils.html.html_processor import process
from utils.html.html_simplifier import simplify
from utils.html.html_tree_serializer import serialize
from utils.html.html_comparer import compare
import os
import pandas as pd
import sys
import csv
import argparse


def bench(input_dir, output_dir, file_pairs):
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
    csv_filename = f"{input_dir}/{file_pairs}"
    df = pd.read_csv(csv_filename)
    results = []
    for index, row in df.iterrows():
        file_name1 = row['Original']
        file_name2 = row['Generated']

        gt_html, gt_screenshot = process(file_name1)
        simplify_html, removed_elements = simplify(gt_html)
        data1 = serialize(simplify_html)

        with open(file_name2, "r") as f:
            html2 = f.read()
        data2 = serialize(html2)
        
        threshold = 0.9
        sim = compare(data1, data2, threshold)
        print(file_name1, file_name2, threshold, sim)
        results.append([file_name1, file_name2, threshold, sim[0], sim[1]])
        
        results_csv_filename = f"{output_dir}/{file_pairs}-comparison_results.csv"
        results_df = pd.DataFrame(results, columns=["Original", "Generated", "Threshold", "accuracy", "layout"])
        results_df.to_csv(results_csv_filename, index=False)




if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Generate HTML files based on image inputs')
    parser.add_argument('--input_dir', type=str, required=True, help='Directory containing HTML files generated by LMM')
    args = parser.parse_args()

    input_dir = args.input_dir
    dataset_path = "../dataset"  # 本地dataset的目录
    output_dir = "benchmark-result"
    
    file_pairs = "file_pairs.csv"
    csv_filename = f"{input_dir}/{file_pairs}"

    # 遍历文件夹并收集.html文件的路径
    html_files = []
    for root, dirs, files in os.walk(input_dir):
        for file in files:
            if file.endswith("htmlcoco.html"):
                continue
            if file.endswith(".html"):
                # 第一列的路径
                first_column_path = os.path.join(dataset_path, file).replace('.html.html','.html')
                # 第二列的路径
                second_column_path = os.path.join(root, file)
                html_files.append((first_column_path, second_column_path))

    # 将路径写入CSV文件
    with open(csv_filename, mode='w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerow(['Original', 'Generated'])
        for paths in html_files:
            writer.writerow(paths)

    print('save file_pairs.csv to', csv_filename)

    bench(input_dir, output_dir, file_pairs)